// Code generated by "stringer -type=MsgType"; DO NOT EDIT.

package enums

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MSG_TEST-1]
	_ = x[MSG_DUMMY-2]
	_ = x[MSG_DUMMY2-3]
	_ = x[MSG_RESOLVER_REQUEST-4]
	_ = x[MSG_RESOLVER_RESPONSE-5]
	_ = x[MSG_REQUEST_AGPL-6]
	_ = x[MSG_RESPONSE_AGPL-7]
	_ = x[MSG_ARM_START-8]
	_ = x[MSG_ARM_STOP-9]
	_ = x[MSG_ARM_RESULT-10]
	_ = x[MSG_ARM_STATUS-11]
	_ = x[MSG_ARM_LIST-12]
	_ = x[MSG_ARM_LIST_RESULT-13]
	_ = x[MSG_ARM_MONITOR-14]
	_ = x[MSG_ARM_TEST-15]
	_ = x[MSG_HELLO_LEGACY-16]
	_ = x[MSG_HELLO-17]
	_ = x[MSG_FRAGMENT-18]
	_ = x[MSG_FRAGMENT_ACK-19]
	_ = x[MSG_WLAN_DATA_TO_HELPER-39]
	_ = x[MSG_WLAN_DATA_FROM_HELPER-40]
	_ = x[MSG_WLAN_HELPER_CONTROL-41]
	_ = x[MSG_WLAN_ADVERTISEMENT-42]
	_ = x[MSG_WLAN_DATA-43]
	_ = x[MSG_DV_RECV-44]
	_ = x[MSG_DV_SEND-45]
	_ = x[MSG_DV_SEND_ACK-46]
	_ = x[MSG_DV_ROUTE-47]
	_ = x[MSG_DV_START-48]
	_ = x[MSG_DV_CONNECT-49]
	_ = x[MSG_DV_DISCONNECT-50]
	_ = x[MSG_DV_SEND_NACK-51]
	_ = x[MSG_DV_DISTANCE_CHANGED-52]
	_ = x[MSG_DV_BOX-53]
	_ = x[MSG_TRANSPORT_XU_MESSAGE-55]
	_ = x[MSG_TRANSPORT_UDP_MESSAGE-56]
	_ = x[MSG_TRANSPORT_UDP_ACK-57]
	_ = x[MSG_TRANSPORT_TCP_NAT_PROBE-60]
	_ = x[MSG_TRANSPORT_TCP_WELCOME-61]
	_ = x[MSG_TRANSPORT_ATS-62]
	_ = x[MSG_NAT_TEST-63]
	_ = x[MSG_CORE_INIT-64]
	_ = x[MSG_CORE_INIT_REPLY-65]
	_ = x[MSG_CORE_NOTIFY_CONNECT-67]
	_ = x[MSG_CORE_NOTIFY_DISCONNECT-68]
	_ = x[MSG_CORE_NOTIFY_STATUS_CHANGE-69]
	_ = x[MSG_CORE_NOTIFY_INBOUND-70]
	_ = x[MSG_CORE_NOTIFY_OUTBOUND-71]
	_ = x[MSG_CORE_SEND_REQUEST-74]
	_ = x[MSG_CORE_SEND_READY-75]
	_ = x[MSG_CORE_SEND-76]
	_ = x[MSG_CORE_MONITOR_PEERS-78]
	_ = x[MSG_CORE_MONITOR_NOTIFY-79]
	_ = x[MSG_CORE_ENCRYPTED_MESSAGE-82]
	_ = x[MSG_CORE_PING-83]
	_ = x[MSG_CORE_PONG-84]
	_ = x[MSG_CORE_HANGUP-85]
	_ = x[MSG_CORE_COMPRESSED_TYPE_MAP-86]
	_ = x[MSG_CORE_BINARY_TYPE_MAP-87]
	_ = x[MSG_CORE_EPHEMERAL_KEY-88]
	_ = x[MSG_CORE_CONFIRM_TYPE_MAP-89]
	_ = x[MSG_DATASTORE_RESERVE-92]
	_ = x[MSG_DATASTORE_RELEASE_RESERVE-93]
	_ = x[MSG_DATASTORE_STATUS-94]
	_ = x[MSG_DATASTORE_PUT-95]
	_ = x[MSG_DATASTORE_GET-97]
	_ = x[MSG_DATASTORE_GET_REPLICATION-98]
	_ = x[MSG_DATASTORE_GET_ZERO_ANONYMITY-99]
	_ = x[MSG_DATASTORE_DATA-100]
	_ = x[MSG_DATASTORE_DATA_END-101]
	_ = x[MSG_DATASTORE_REMOVE-102]
	_ = x[MSG_DATASTORE_DROP-103]
	_ = x[MSG_DATASTORE_GET_KEY-104]
	_ = x[MSG_FS_REQUEST_LOC_SIGN-126]
	_ = x[MSG_FS_REQUEST_LOC_SIGNATURE-127]
	_ = x[MSG_FS_INDEX_START-128]
	_ = x[MSG_FS_INDEX_START_OK-129]
	_ = x[MSG_FS_INDEX_START_FAILED-130]
	_ = x[MSG_FS_INDEX_LIST_GET-131]
	_ = x[MSG_FS_INDEX_LIST_ENTRY-132]
	_ = x[MSG_FS_INDEX_LIST_END-133]
	_ = x[MSG_FS_UNINDEX-134]
	_ = x[MSG_FS_UNINDEX_OK-135]
	_ = x[MSG_FS_START_SEARCH-136]
	_ = x[MSG_FS_GET-137]
	_ = x[MSG_FS_PUT-138]
	_ = x[MSG_FS_MIGRATION_STOP-139]
	_ = x[MSG_FS_CADET_QUERY-140]
	_ = x[MSG_FS_CADET_REPLY-141]
	_ = x[MSG_DHT_CLIENT_PUT-142]
	_ = x[MSG_DHT_CLIENT_GET-143]
	_ = x[MSG_DHT_CLIENT_GET_STOP-144]
	_ = x[MSG_DHT_CLIENT_RESULT-145]
	_ = x[MSG_DHT_P2P_PUT-146]
	_ = x[MSG_DHT_P2P_GET-147]
	_ = x[MSG_DHT_P2P_RESULT-148]
	_ = x[MSG_DHT_MONITOR_GET-149]
	_ = x[MSG_DHT_MONITOR_GET_RESP-150]
	_ = x[MSG_DHT_MONITOR_PUT-151]
}

const _MsgType_name = "MSG_TESTMSG_DUMMYMSG_DUMMY2MSG_RESOLVER_REQUESTMSG_RESOLVER_RESPONSEMSG_REQUEST_AGPLMSG_RESPONSE_AGPLMSG_ARM_STARTMSG_ARM_STOPMSG_ARM_RESULTMSG_ARM_STATUSMSG_ARM_LISTMSG_ARM_LIST_RESULTMSG_ARM_MONITORMSG_ARM_TESTMSG_HELLO_LEGACYMSG_HELLOMSG_FRAGMENTMSG_FRAGMENT_ACKMSG_WLAN_DATA_TO_HELPERMSG_WLAN_DATA_FROM_HELPERMSG_WLAN_HELPER_CONTROLMSG_WLAN_ADVERTISEMENTMSG_WLAN_DATAMSG_DV_RECVMSG_DV_SENDMSG_DV_SEND_ACKMSG_DV_ROUTEMSG_DV_STARTMSG_DV_CONNECTMSG_DV_DISCONNECTMSG_DV_SEND_NACKMSG_DV_DISTANCE_CHANGEDMSG_DV_BOXMSG_TRANSPORT_XU_MESSAGEMSG_TRANSPORT_UDP_MESSAGEMSG_TRANSPORT_UDP_ACKMSG_TRANSPORT_TCP_NAT_PROBEMSG_TRANSPORT_TCP_WELCOMEMSG_TRANSPORT_ATSMSG_NAT_TESTMSG_CORE_INITMSG_CORE_INIT_REPLYMSG_CORE_NOTIFY_CONNECTMSG_CORE_NOTIFY_DISCONNECTMSG_CORE_NOTIFY_STATUS_CHANGEMSG_CORE_NOTIFY_INBOUNDMSG_CORE_NOTIFY_OUTBOUNDMSG_CORE_SEND_REQUESTMSG_CORE_SEND_READYMSG_CORE_SENDMSG_CORE_MONITOR_PEERSMSG_CORE_MONITOR_NOTIFYMSG_CORE_ENCRYPTED_MESSAGEMSG_CORE_PINGMSG_CORE_PONGMSG_CORE_HANGUPMSG_CORE_COMPRESSED_TYPE_MAPMSG_CORE_BINARY_TYPE_MAPMSG_CORE_EPHEMERAL_KEYMSG_CORE_CONFIRM_TYPE_MAPMSG_DATASTORE_RESERVEMSG_DATASTORE_RELEASE_RESERVEMSG_DATASTORE_STATUSMSG_DATASTORE_PUTMSG_DATASTORE_GETMSG_DATASTORE_GET_REPLICATIONMSG_DATASTORE_GET_ZERO_ANONYMITYMSG_DATASTORE_DATAMSG_DATASTORE_DATA_ENDMSG_DATASTORE_REMOVEMSG_DATASTORE_DROPMSG_DATASTORE_GET_KEYMSG_FS_REQUEST_LOC_SIGNMSG_FS_REQUEST_LOC_SIGNATUREMSG_FS_INDEX_STARTMSG_FS_INDEX_START_OKMSG_FS_INDEX_START_FAILEDMSG_FS_INDEX_LIST_GETMSG_FS_INDEX_LIST_ENTRYMSG_FS_INDEX_LIST_ENDMSG_FS_UNINDEXMSG_FS_UNINDEX_OKMSG_FS_START_SEARCHMSG_FS_GETMSG_FS_PUTMSG_FS_MIGRATION_STOPMSG_FS_CADET_QUERYMSG_FS_CADET_REPLYMSG_DHT_CLIENT_PUTMSG_DHT_CLIENT_GETMSG_DHT_CLIENT_GET_STOPMSG_DHT_CLIENT_RESULTMSG_DHT_P2P_PUTMSG_DHT_P2P_GETMSG_DHT_P2P_RESULTMSG_DHT_MONITOR_GETMSG_DHT_MONITOR_GET_RESPMSG_DHT_MONITOR_PUT"

var _MsgType_map = map[MsgType]string{
	1:   _MsgType_name[0:8],
	2:   _MsgType_name[8:17],
	3:   _MsgType_name[17:27],
	4:   _MsgType_name[27:47],
	5:   _MsgType_name[47:68],
	6:   _MsgType_name[68:84],
	7:   _MsgType_name[84:101],
	8:   _MsgType_name[101:114],
	9:   _MsgType_name[114:126],
	10:  _MsgType_name[126:140],
	11:  _MsgType_name[140:154],
	12:  _MsgType_name[154:166],
	13:  _MsgType_name[166:185],
	14:  _MsgType_name[185:200],
	15:  _MsgType_name[200:212],
	16:  _MsgType_name[212:228],
	17:  _MsgType_name[228:237],
	18:  _MsgType_name[237:249],
	19:  _MsgType_name[249:265],
	39:  _MsgType_name[265:288],
	40:  _MsgType_name[288:313],
	41:  _MsgType_name[313:336],
	42:  _MsgType_name[336:358],
	43:  _MsgType_name[358:371],
	44:  _MsgType_name[371:382],
	45:  _MsgType_name[382:393],
	46:  _MsgType_name[393:408],
	47:  _MsgType_name[408:420],
	48:  _MsgType_name[420:432],
	49:  _MsgType_name[432:446],
	50:  _MsgType_name[446:463],
	51:  _MsgType_name[463:479],
	52:  _MsgType_name[479:502],
	53:  _MsgType_name[502:512],
	55:  _MsgType_name[512:536],
	56:  _MsgType_name[536:561],
	57:  _MsgType_name[561:582],
	60:  _MsgType_name[582:609],
	61:  _MsgType_name[609:634],
	62:  _MsgType_name[634:651],
	63:  _MsgType_name[651:663],
	64:  _MsgType_name[663:676],
	65:  _MsgType_name[676:695],
	67:  _MsgType_name[695:718],
	68:  _MsgType_name[718:744],
	69:  _MsgType_name[744:773],
	70:  _MsgType_name[773:796],
	71:  _MsgType_name[796:820],
	74:  _MsgType_name[820:841],
	75:  _MsgType_name[841:860],
	76:  _MsgType_name[860:873],
	78:  _MsgType_name[873:895],
	79:  _MsgType_name[895:918],
	82:  _MsgType_name[918:944],
	83:  _MsgType_name[944:957],
	84:  _MsgType_name[957:970],
	85:  _MsgType_name[970:985],
	86:  _MsgType_name[985:1013],
	87:  _MsgType_name[1013:1037],
	88:  _MsgType_name[1037:1059],
	89:  _MsgType_name[1059:1084],
	92:  _MsgType_name[1084:1105],
	93:  _MsgType_name[1105:1134],
	94:  _MsgType_name[1134:1154],
	95:  _MsgType_name[1154:1171],
	97:  _MsgType_name[1171:1188],
	98:  _MsgType_name[1188:1217],
	99:  _MsgType_name[1217:1249],
	100: _MsgType_name[1249:1267],
	101: _MsgType_name[1267:1289],
	102: _MsgType_name[1289:1309],
	103: _MsgType_name[1309:1327],
	104: _MsgType_name[1327:1348],
	126: _MsgType_name[1348:1371],
	127: _MsgType_name[1371:1399],
	128: _MsgType_name[1399:1417],
	129: _MsgType_name[1417:1438],
	130: _MsgType_name[1438:1463],
	131: _MsgType_name[1463:1484],
	132: _MsgType_name[1484:1507],
	133: _MsgType_name[1507:1528],
	134: _MsgType_name[1528:1542],
	135: _MsgType_name[1542:1559],
	136: _MsgType_name[1559:1578],
	137: _MsgType_name[1578:1588],
	138: _MsgType_name[1588:1598],
	139: _MsgType_name[1598:1619],
	140: _MsgType_name[1619:1637],
	141: _MsgType_name[1637:1655],
	142: _MsgType_name[1655:1673],
	143: _MsgType_name[1673:1691],
	144: _MsgType_name[1691:1714],
	145: _MsgType_name[1714:1735],
	146: _MsgType_name[1735:1750],
	147: _MsgType_name[1750:1765],
	148: _MsgType_name[1765:1783],
	149: _MsgType_name[1783:1802],
	150: _MsgType_name[1802:1826],
	151: _MsgType_name[1826:1845],
}

func (i MsgType) String() string {
	if str, ok := _MsgType_map[i]; ok {
		return str
	}
	return "MsgType(" + strconv.FormatInt(int64(i), 10) + ")"
}
