// Code generated by "stringer -type=GNSType gns_type.go"; DO NOT EDIT.

package enums

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[GNS_TYPE_ANY-0]
	_ = x[GNS_TYPE_DNS_A-1]
	_ = x[GNS_TYPE_DNS_NS-2]
	_ = x[GNS_TYPE_DNS_CNAME-5]
	_ = x[GNS_TYPE_DNS_SOA-6]
	_ = x[GNS_TYPE_DNS_PTR-12]
	_ = x[GNS_TYPE_DNS_MX-15]
	_ = x[GNS_TYPE_DNS_TXT-16]
	_ = x[GNS_TYPE_DNS_RP-17]
	_ = x[GNS_TYPE_DNS_AFSDB-18]
	_ = x[GNS_TYPE_DNS_SIG-24]
	_ = x[GNS_TYPE_DNS_KEY-25]
	_ = x[GNS_TYPE_DNS_AAAA-28]
	_ = x[GNS_TYPE_DNS_LOC-29]
	_ = x[GNS_TYPE_DNS_SRV-33]
	_ = x[GNS_TYPE_DNS_NAPTR-35]
	_ = x[GNS_TYPE_DNS_KX-36]
	_ = x[GNS_TYPE_DNS_CERT-37]
	_ = x[GNS_TYPE_DNS_DNAME-39]
	_ = x[GNS_TYPE_DNS_APL-42]
	_ = x[GNS_TYPE_DNS_DS-43]
	_ = x[GNS_TYPE_DNS_SSHFP-44]
	_ = x[GNS_TYPE_DNS_IPSECKEY-45]
	_ = x[GNS_TYPE_DNS_RRSIG-46]
	_ = x[GNS_TYPE_DNS_NSEC-47]
	_ = x[GNS_TYPE_DNS_DNSKEY-48]
	_ = x[GNS_TYPE_DNS_DHCID-49]
	_ = x[GNS_TYPE_DNS_NSEC3-50]
	_ = x[GNS_TYPE_DNS_NSEC3PARAM-51]
	_ = x[GNS_TYPE_DNS_TLSA-52]
	_ = x[GNS_TYPE_DNS_HIP-55]
	_ = x[GNS_TYPE_DNS_CDS-59]
	_ = x[GNS_TYPE_DNS_CDNSKEY-60]
	_ = x[GNS_TYPE_DNS_TKEY-249]
	_ = x[GNS_TYPE_DNS_TSIG-250]
	_ = x[GNS_TYPE_DNS_URI-256]
	_ = x[GNS_TYPE_DNS_CAA-257]
	_ = x[GNS_TYPE_DNS_TA-32768]
	_ = x[GNS_TYPE_DNS_DLV-32769]
	_ = x[GNS_TYPE_PKEY-65536]
	_ = x[GNS_TYPE_NICK-65537]
	_ = x[GNS_TYPE_LEHO-65538]
	_ = x[GNS_TYPE_VPN-65539]
	_ = x[GNS_TYPE_GNS2DNS-65540]
	_ = x[GNS_TYPE_BOX-65541]
	_ = x[GNS_TYPE_PLACE-65542]
	_ = x[GNS_TYPE_PHONE-65543]
	_ = x[GNS_TYPE_RECLAIM_ATTRIBUTE-65544]
	_ = x[GNS_TYPE_RECLAIM_TICKET-65545]
	_ = x[GNS_TYPE_DELEGATE-65548]
	_ = x[GNS_TYPE_ATTRIBUTE-65549]
	_ = x[GNS_TYPE_RECLAIM_ATTRIBUTE_REF-65550]
	_ = x[GNS_TYPE_REDIRECT-65551]
	_ = x[GNS_TYPE_RECLAIM_OIDC_CLIENT-65552]
	_ = x[GNS_TYPE_RECLAIM_OIDC_REDIRECT-65553]
	_ = x[GNS_TYPE_RECLAIM_CREDENTIAL-65554]
	_ = x[GNS_TYPE_RECLAIM_PRESENTATION-65555]
	_ = x[GNS_TYPE_EDKEY-65556]
	_ = x[GNS_TYPE_ERIS_READ_CAPABILITY-65557]
	_ = x[GNS_TYPE_MESSENGER_ROOM_ENTRY-65558]
	_ = x[GNS_TYPE_TOMBSTONE-65559]
	_ = x[GNS_TYPE_MESSENGER_ROOM_DETAILS-65560]
	_ = x[GNS_TYPE_DID_DOCUMENT-65561]
}

const _GNSType_name = "GNS_TYPE_ANYGNS_TYPE_DNS_AGNS_TYPE_DNS_NSGNS_TYPE_DNS_CNAMEGNS_TYPE_DNS_SOAGNS_TYPE_DNS_PTRGNS_TYPE_DNS_MXGNS_TYPE_DNS_TXTGNS_TYPE_DNS_RPGNS_TYPE_DNS_AFSDBGNS_TYPE_DNS_SIGGNS_TYPE_DNS_KEYGNS_TYPE_DNS_AAAAGNS_TYPE_DNS_LOCGNS_TYPE_DNS_SRVGNS_TYPE_DNS_NAPTRGNS_TYPE_DNS_KXGNS_TYPE_DNS_CERTGNS_TYPE_DNS_DNAMEGNS_TYPE_DNS_APLGNS_TYPE_DNS_DSGNS_TYPE_DNS_SSHFPGNS_TYPE_DNS_IPSECKEYGNS_TYPE_DNS_RRSIGGNS_TYPE_DNS_NSECGNS_TYPE_DNS_DNSKEYGNS_TYPE_DNS_DHCIDGNS_TYPE_DNS_NSEC3GNS_TYPE_DNS_NSEC3PARAMGNS_TYPE_DNS_TLSAGNS_TYPE_DNS_HIPGNS_TYPE_DNS_CDSGNS_TYPE_DNS_CDNSKEYGNS_TYPE_DNS_TKEYGNS_TYPE_DNS_TSIGGNS_TYPE_DNS_URIGNS_TYPE_DNS_CAAGNS_TYPE_DNS_TAGNS_TYPE_DNS_DLVGNS_TYPE_PKEYGNS_TYPE_NICKGNS_TYPE_LEHOGNS_TYPE_VPNGNS_TYPE_GNS2DNSGNS_TYPE_BOXGNS_TYPE_PLACEGNS_TYPE_PHONEGNS_TYPE_RECLAIM_ATTRIBUTEGNS_TYPE_RECLAIM_TICKETGNS_TYPE_DELEGATEGNS_TYPE_ATTRIBUTEGNS_TYPE_RECLAIM_ATTRIBUTE_REFGNS_TYPE_REDIRECTGNS_TYPE_RECLAIM_OIDC_CLIENTGNS_TYPE_RECLAIM_OIDC_REDIRECTGNS_TYPE_RECLAIM_CREDENTIALGNS_TYPE_RECLAIM_PRESENTATIONGNS_TYPE_EDKEYGNS_TYPE_ERIS_READ_CAPABILITYGNS_TYPE_MESSENGER_ROOM_ENTRYGNS_TYPE_TOMBSTONEGNS_TYPE_MESSENGER_ROOM_DETAILSGNS_TYPE_DID_DOCUMENT"

var _GNSType_map = map[GNSType]string{
	0:     _GNSType_name[0:12],
	1:     _GNSType_name[12:26],
	2:     _GNSType_name[26:41],
	5:     _GNSType_name[41:59],
	6:     _GNSType_name[59:75],
	12:    _GNSType_name[75:91],
	15:    _GNSType_name[91:106],
	16:    _GNSType_name[106:122],
	17:    _GNSType_name[122:137],
	18:    _GNSType_name[137:155],
	24:    _GNSType_name[155:171],
	25:    _GNSType_name[171:187],
	28:    _GNSType_name[187:204],
	29:    _GNSType_name[204:220],
	33:    _GNSType_name[220:236],
	35:    _GNSType_name[236:254],
	36:    _GNSType_name[254:269],
	37:    _GNSType_name[269:286],
	39:    _GNSType_name[286:304],
	42:    _GNSType_name[304:320],
	43:    _GNSType_name[320:335],
	44:    _GNSType_name[335:353],
	45:    _GNSType_name[353:374],
	46:    _GNSType_name[374:392],
	47:    _GNSType_name[392:409],
	48:    _GNSType_name[409:428],
	49:    _GNSType_name[428:446],
	50:    _GNSType_name[446:464],
	51:    _GNSType_name[464:487],
	52:    _GNSType_name[487:504],
	55:    _GNSType_name[504:520],
	59:    _GNSType_name[520:536],
	60:    _GNSType_name[536:556],
	249:   _GNSType_name[556:573],
	250:   _GNSType_name[573:590],
	256:   _GNSType_name[590:606],
	257:   _GNSType_name[606:622],
	32768: _GNSType_name[622:637],
	32769: _GNSType_name[637:653],
	65536: _GNSType_name[653:666],
	65537: _GNSType_name[666:679],
	65538: _GNSType_name[679:692],
	65539: _GNSType_name[692:704],
	65540: _GNSType_name[704:720],
	65541: _GNSType_name[720:732],
	65542: _GNSType_name[732:746],
	65543: _GNSType_name[746:760],
	65544: _GNSType_name[760:786],
	65545: _GNSType_name[786:809],
	65548: _GNSType_name[809:826],
	65549: _GNSType_name[826:844],
	65550: _GNSType_name[844:874],
	65551: _GNSType_name[874:891],
	65552: _GNSType_name[891:919],
	65553: _GNSType_name[919:949],
	65554: _GNSType_name[949:976],
	65555: _GNSType_name[976:1005],
	65556: _GNSType_name[1005:1019],
	65557: _GNSType_name[1019:1048],
	65558: _GNSType_name[1048:1077],
	65559: _GNSType_name[1077:1095],
	65560: _GNSType_name[1095:1126],
	65561: _GNSType_name[1126:1147],
}

func (i GNSType) String() string {
	if str, ok := _GNSType_map[i]; ok {
		return str
	}
	return "GNSType(" + strconv.FormatInt(int64(i), 10) + ")"
}
